{% set version = "0.26.0" %}

package:
  name: darts-packages
  version: {{ version }}

source:
  # it seems that in the pypi package the files are older than the one tagged as 0.26.0
  # and anyway some tests fail. Also this tagged version is old by two commits, but it works.
  url: https://github.com/unit8co/darts/archive/refs/tags/0.26.0.tar.gz
  sha256: c4d895fbf44baba559f9639000f9da0cb70c28bea98f650805252b91f502ea01
  patches:
    # For some reason the selectors [py38 or py39] and [py<310] do
    # not work, so the patch is applied for all Python versions.
    - patches/001_fix-resample-restore-loffset.patch
    - patches/002_fix-test-dataset-loaders.patch

build:
  number: 0
  # statsforecast, shap, and pyod are not available for s390x
  skip: true  # [py<38 or s390x]
requirements:
  host:
    - pip
    - python
    - setuptools
    - wheel

outputs:
  - name: darts
    build:
      skip: true  # [py<38 or s390x]
    requirements:
      build:
        - patch     # [not win]
        - m2-patch  # [win]
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - holidays >=0.11.1
        - joblib >=0.16.0
        - matplotlib-base >=3.3.0
        - nfoursid >=1.0.0
        - numpy >=1.19.0
        - pandas >=1.0.5,<2.0.0  # [py<39]
        - pandas >=1.0.5         # [py>=39]
        - pmdarima >=1.8.0
        - pyod >=0.9.5
        - requests >=2.22.0
        # the upstream requires >=1.0.1 but tests fail
        # the version 1.3.0 is the one making everything stable
        - scikit-learn >=1.3.0
        - scipy >=1.3.2
        - shap >=0.40.0
        - statsforecast >=1.4.0
        - statsmodels >=0.14.0
        - tbats >=1.1.0
        - tqdm >=4.60.0
        - typing-extensions
        - xarray >=0.17.0
        - xgboost >=1.6.0
        # some tests fail if this pinning is not explicit
        # because the version 2.8.3+snowflake will be picked
        # up and apparently it's causing those tests fail
        # - python-dateutil 2.8.2

    test:
      imports:
        - darts
        - darts.ad
        - darts.ad.aggregators
        - darts.ad.anomaly_model
        - darts.ad.detectors
        - darts.ad.scorers
        - darts.dataprocessing
        - darts.dataprocessing.dtw
        - darts.dataprocessing.encoders
        - darts.dataprocessing.transformers
        - darts.datasets
        - darts.explainability
        - darts.metrics
        - darts.models
        - darts.tests
        - darts.tests.dataprocessing
        - darts.tests.dataprocessing.transformers
        - darts.tests.utils
        - darts.utils
        - darts.utils.data
        - darts.utils.historical_forecasts
      requires:
        - pip
        - testfixtures
        - pytest
      source_files:
        - darts
      commands:
        - pip check
        # - pytest -vvv -s darts/tests

  - name: u8darts
    build:
      skip: true  # [py<38 or s390x]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage("darts", exact=True) }}

    test:
      imports:
        - darts
      requires:
        - pip
      commands:
        - pip check

  # - name: u8darts-notorch
  #   skip: true  # [py<38 or s390x]
  #   requirements:
  #     host:
  #       - python
  #     run:
  #       - python
  #       - {{ pin_subpackage("darts", exact=True) }}
  #       - catboost >=1.0.6
  #       - lightgbm >=3.2.0
  #       - prophet >=1.1.1

  #   test:
  #     imports:
  #       - darts
  #       - darts.ad
  #       - darts.ad.aggregators
  #       - darts.ad.anomaly_model
  #       - darts.ad.detectors
  #       - darts.ad.scorers
  #       - darts.dataprocessing
  #       - darts.dataprocessing.dtw
  #       - darts.dataprocessing.encoders
  #       - darts.dataprocessing.transformers
  #       - darts.datasets
  #       - darts.explainability
  #       - darts.metrics
  #       - darts.models
  #       - darts.tests
  #       - darts.tests.dataprocessing
  #       - darts.tests.dataprocessing.transformers
  #       - darts.tests.utils
  #       - darts.utils
  #       - darts.utils.data
  #       - darts.utils.historical_forecasts
  #     requires:
  #       - pip      
  #     commands:
  #       - pip check

  # - name: u8darts-torch
  #   skip: true  # [py<38 or s390x]
  #   requirements:
  #     host:
  #       - python
  #     run:
  #       - python
  #       - {{ pin_subpackage("darts", exact=True) }}
  #       - pytorch-lightning >=1.5.0
  #       - tensorboardx >=2.1
  #       - pytorch >=1.8.0

  #   test:
  #     imports:
  #       - darts
  #       - darts.ad
  #       - darts.ad.aggregators
  #       - darts.ad.anomaly_model
  #       - darts.ad.detectors
  #       - darts.ad.scorers
  #       - darts.dataprocessing
  #       - darts.dataprocessing.dtw
  #       - darts.dataprocessing.encoders
  #       - darts.dataprocessing.transformers
  #       - darts.datasets
  #       - darts.explainability
  #       - darts.metrics
  #       - darts.models
  #       - darts.tests
  #       - darts.tests.dataprocessing
  #       - darts.tests.dataprocessing.transformers
  #       - darts.tests.utils
  #       - darts.utils
  #       - darts.utils.data
  #       - darts.utils.historical_forecasts
  #     requires:
  #       - pip
  #     commands:
  #       - pip check

  # - name: u8darts-all
  #   skip: true  # [py<38 or s390x]
  #   requirements:
  #     host:
  #       - python
  #     run:
  #       - python
  #       - {{ pin_subpackage("darts", exact=True) }}
  #       - pytorch-lightning >=1.5.0
  #       - tensorboardx >=2.1
  #       - pytorch >=1.8.0
  #       - catboost >=1.0.6
  #       - lightgbm >=3.2.0
  #       - prophet >=1.1.1

  #   test:
  #     imports:
  #       - darts
  #       - darts.ad
  #       - darts.ad.aggregators
  #       - darts.ad.anomaly_model
  #       - darts.ad.detectors
  #       - darts.ad.scorers
  #       - darts.dataprocessing
  #       - darts.dataprocessing.dtw
  #       - darts.dataprocessing.encoders
  #       - darts.dataprocessing.transformers
  #       - darts.datasets
  #       - darts.explainability
  #       - darts.metrics
  #       - darts.models
  #       - darts.tests
  #       - darts.tests.dataprocessing
  #       - darts.tests.dataprocessing.transformers
  #       - darts.tests.utils
  #       - darts.utils
  #       - darts.utils.data
  #       - darts.utils.historical_forecasts
  #     requires:
  #       - pip
  #     commands:
  #       - pip check

about:
  home: https://unit8co.github.io/darts/
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE
  summary: A python library for user-friendly forecasting and anomaly detection on time series.
  description: |
    Darts is a Python library for user-friendly forecasting and anomaly detection on time series. 
    It contains a variety of models, from classics such as ARIMA to deep neural networks. 
    The forecasting models can all be used in the same way, using fit() and predict() functions, 
    similar to scikit-learn. The library also makes it easy to backtest models, combine the 
    predictions of several models, and take external data into account. Darts supports both 
    univariate and multivariate time series and models. The ML-based models can be trained on 
    potentially large datasets containing multiple time series, and some of the models offer a 
    rich support for probabilistic forecasting.
  dev_url: https://github.com/unit8co/darts
  doc_url: https://unit8co.github.io/darts/

extra:
  recipe-maintainers:
    - hrzn
    - dennisbader
