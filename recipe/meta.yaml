{% set name = "u8darts" %}
{% set version = "0.33.0" %}

package:
  name: {{ name }}-packages
  version: {{ version }}

source:
  # it seems that in the pypi package the files are older than the one tagged as 0.26.0
  # and anyway some tests fail. Also this tagged version is old by two commits, but it works.
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/u8darts-{{ version }}.tar.gz
  sha256: 9db947a8b3c3428c6860dbfd4d01d072d8245f884b51aaad74a5f6a48a5015c9
  # patches:
  #   # For some reason the selectors [py38 or py39] and [py<310] do
  #   # not work, so the patch is applied for all Python versions.
  #   - patches/001_fix-resample-restore-loffset.patch
  #   - patches/002_add-latest-commit-0-26-0.patch

build:
  number: 0
  # statsforecast, shap, and pyod are not available for s390x
  # catboost is not available for ppc64le
  skip: true  # [py<39 or s390x or ppc64le]

outputs:
  - name: {{ name }}
    script: base_build.sh   # [unix]
    script: base_build.bat  # [win]
    requirements:
      # build:
      #   - patch     # [not win]
      #   - m2-patch  # [win]
      host:
        - python
        - pip
        - setuptools
        - wheel
      run:
        - python
        - holidays >=0.11.1
        - joblib >=0.16.0
        - matplotlib-base >=3.3.0
        - nfoursid >=1.0.0
        - numpy >=1.19.0,<2.0.0
        - pandas >=1.0.5
        - pmdarima >=1.8.0
        - pyod >=0.9.5
        - requests >=2.22.0
        - scikit-learn >=1.0.1
        - scipy >=1.3.2
        - shap >=0.40.0
        - statsforecast >=1.4
        - statsmodels >=0.14.0
        - tbats >=1.1.0
        - tqdm >=4.60.0
        - typing-extensions
        - xarray >=0.17.0
        - xgboost >=1.6.0

    test:
      imports:
        - darts
        - darts.ad
        - darts.ad.aggregators
        - darts.ad.anomaly_model
        - darts.ad.detectors
        - darts.ad.scorers
        - darts.dataprocessing
        - darts.dataprocessing.dtw
        - darts.dataprocessing.encoders
        - darts.dataprocessing.transformers
        - darts.datasets
        - darts.explainability
        - darts.metrics
        - darts.models
        - darts.tests
        - darts.tests.dataprocessing
        - darts.tests.dataprocessing.transformers
        - darts.tests.utils
        - darts.utils
        - darts.utils.data
        - darts.utils.historical_forecasts  # [not osx]  # plotly-resampler 0.8.3.2 is not supported on this platform
      requires:
        - pip
        - testfixtures
        - pytest
      source_files:
        - darts/tests
        - pyproject.toml  # for test marks
      commands:
        - pip check
        # Import issue of the following classes:
        # - darts.models.forecasting.croston.Croston
        # - darts.models.forecasting.sf_auto_arima.StatsForecastAutoARIMA
        # - darts.models.forecasting.sf_auto_ces.StatsForecastAutoCES
        # - darts.models.forecasting.sf_auto_ets.StatsForecastAutoETS
        # - darts.models.forecasting.sf_auto_tbats.StatsForecastAutoTBATS
        # - darts.models.forecasting.sf_auto_theta.StatsForecastAutoTheta
        {% set ignore_tests = " --ignore=darts/tests/models/forecasting/test_local_forecasting_models.py" %}
        {% set ignore_tests = ignore_tests + " --ignore=darts/tests/models/forecasting/test_sf_auto_ets.py" %}

        # AttributeError: module 'sklearn.metrics' has no attribute 'root_mean_squared_error'
        {% set ignore_tests = ignore_tests + " --ignore=darts/tests/metrics/test_metrics.py" %}  # [osx]

        # AttributeError: 'super' object has no attribute '__sklearn_tags__'
        {% set ignore_tests = ignore_tests + " --ignore=darts/tests/explainability/test_shap_explainer.py" %}
        {% set ignore_tests = ignore_tests + " --ignore=darts/tests/models/forecasting/test_regression_models.py" %}

        # because of `AssertionError: assert dtype('int64') == int`
        {% set skip_tests = "not test_stridden_conformal_model" %}  # [linux or win]
        {% set skip_tests = skip_tests + " and not test_time_col_convert_integers" %}  # [linux or win]
        {% set skip_tests = skip_tests + " and not test_time_col_convert_string_integers" %}  # [linux or win]

        {% set skip_tests = skip_tests + " and not test_lagged_training_data_equal_freq" %}  # [linux]
        {% set skip_tests = skip_tests + " and not test_create_lagged_component_names_different_lags" %}  # [linux]
        {% set skip_tests = skip_tests + " and not test_backtest_bad_covariates" %}  # [linux]

        # because of PermissionError
        {% set skip_tests = skip_tests + " and not test_ts_methods_with_static_covariates" %}  # [win]
        {% set skip_tests = skip_tests + " and not test_operations" %}  # [win]
        {% set skip_tests = skip_tests + " and not test_from_csv" %}  # [win]

        # AssertionError
        {% set skip_tests = "not TestKalmanFilter::test_kalman_missing_values" %}  # [osx]

        - set OMP_NUM_THREADS=1  # [win]
        - pytest darts/tests -vv -s -m "not slow" {{ ignore_tests }}  # [not (linux or win)]
        - pytest darts/tests -vv -s -m "not slow" -k "{{ skip_tests }}" {{ ignore_tests }}  # [linux or win or osx]

  - name: {{ name }}-notorch
    requirements:
      host:
        - python
        - wheel
        - setuptools
      run:
        - python
        - {{ pin_subpackage("u8darts", exact=True) }}
        # Dependencies from https://github.com/unit8co/darts/blob/0.33.0/requirements/notorch.txt
        - catboost >=1.0.6
        - lightgbm >=3.2.0
        - prophet >=1.1.1
    test:
      imports:
        # dummy test; actual tests are in the `darts` subpackage
        - darts

  - name: {{ name }}-torch
    requirements:
      host:
        - python
        - wheel
        - setuptools
      run:
        - python
        - {{ pin_subpackage("u8darts", exact=True) }}
        # Dependencies from torch.txt, see https://github.com/unit8co/darts/blob/0.33.0/requirements/torch.txt
        - pytorch-lightning >=1.5.0
        - tensorboardx >=2.1
        - pytorch >=1.8.0

    test:
      imports:
        # dummy test; actual tests are in the `darts` subpackage
        - darts

  - name: {{ name }}-all
    requirements:
      host:
        - python
        - setuptools
        - wheel
      run:
        - python
        - {{ pin_subpackage("u8darts", exact=True) }}
        - pytorch-lightning >=1.5.0
        - tensorboardx >=2.1
        - pytorch >=1.8.0
        - catboost >=1.0.6
        - lightgbm >=3.2.0
        - prophet >=1.1.1
    test:
      imports:
        # dummy test; actual tests are in the `darts` subpackage
        - darts
      requires:
        - pip
      commands:
        # `pip check` should be inside the `darts-all` subpackage only
        # for `win` the `darts-all` requires `xgboost` which is there but not detected by `pip`
        - pip check  # [not win]

about:
  home: https://unit8co.github.io/darts/
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE
  summary: A python library for user-friendly forecasting and anomaly detection on time series.
  description: |
    Darts is a Python library for user-friendly forecasting and anomaly detection on time series. 
    It contains a variety of models, from classics such as ARIMA to deep neural networks. 
    The forecasting models can all be used in the same way, using fit() and predict() functions, 
    similar to scikit-learn. The library also makes it easy to backtest models, combine the 
    predictions of several models, and take external data into account. Darts supports both 
    univariate and multivariate time series and models. The ML-based models can be trained on 
    potentially large datasets containing multiple time series, and some of the models offer a 
    rich support for probabilistic forecasting.
  dev_url: https://github.com/unit8co/darts
  doc_url: https://unit8co.github.io/darts/

extra:
  recipe-maintainers:
    - hrzn
    - dennisbader
  skip-lints:
    - missing_pip_check



